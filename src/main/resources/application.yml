server:
  port: 8086

logging:
  level:
    ru.dfed.apachekafkaproducer: INFO
    org:
      apache:
        kafka:
          clients:
            NetworkClient: ERROR


spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    listener:
      ack-mode: manual_immediate
    producer:
        #      group-id: group_id
        #      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      #      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      topic: ${TOPIC_OUT:zfront_incoming}
    #      retries: 3
    #      acks: 1
    #      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: mock
      topic: ${TOPIC_IN:zfront_outgoing}
      auto-offset-reset: earliest
      max-poll-records: 1
      bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
      enable-auto-commit: false
      fetch-max-wait: 20000
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: ru.dfed.apachekafkaconsumer.model
        spring.json.use.type.headers: false
        spring.json.value.default.type: ru.dfed.apachekafkaconsumer.model.Book